#include "SparkJson.h"
#include "SdFat.h"

STARTUP(cellular_credentials_set("isafe","","",NULL));

StaticJsonBuffer<200> jsonBuffer;
JsonObject& root = jsonBuffer.createObject();
File myFile;
char str[256];
unsigned long head = 0;
unsigned long tail = 0;
void setup() {
  Serial.begin(9600);
  while (!Serial) {
    SysCall::yield();
  }

  Serial.println("Type any character to start");
  while (Serial.read() <= 0) {
    SysCall::yield();
  }

  //Create Json string
  root["sensor"] = "gps";
  root["time"] = 1351824120;

  JsonArray& data = root.createNestedArray("data");
  data.add(48.756080, 6);  // 6 is the number of decimals to print
  data.add(2.302038, 6);   // if not specified, 2 digits are printed

  root.printTo(str, sizeof(str));

  // Initialize SdFat or print a detailed error message and halt
  // Use half speed like the native library.
  // Change to SPI_FULL_SPEED for more performance.
  if (!sd.begin(chipSelect, SPI_HALF_SPEED)) {
    sd.initErrorHalt();
  }

}

void loop() {
  if(!myFile.open("jdata1.txt", O_CREAT | O_RDWR)) {
    sd.errorHalt("Can't open file");
  }

  head = myFile.curPosition();
  myFile.println(str);
  myFile.println("123345");
  myFile.println("7676666");
  myFile.seekSet(tail);
  int r = random(10);
  Serial.println(r);
  if(r%2 == 0) {
    Serial.println("Sending lines");
    while(myFile.available()) {
        while(myFile.available()) {
          char T = myFile.peek();
          if(T == '\n') {
            break;
          }
          myFile.read();
        }
        tail = myFile.curPosition();
        if(tail == head)
        {
          myFile.close();
          myFile.open("delete.txt");
          myFile.trunate(0);
          myFile.close();
        }
    }
  }
  Serial.println("Did not send");
  myFile.close();

}
